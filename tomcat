#!/bin/bash
#
# @author: William Panting
# This is a conglomeration of works by Steve Young, UPEI, Adam Vessey, Jason MacWilliams

# it's a service!
# chkconfig: 2345 95 15
# description: Tomcat, with Islandora stack.
### BEGIN INIT INFO
# Provides: fedora
# Required-Start: $all
# Required-Stop: $all
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start tomcat at boot.
# Description: Start the tomcat servelet container holding Fedora.
### END INIT INFO


#bring in environment variables
if [ -e /etc/environment ] ; then
  . /etc/environment
fi

# this can mitigate some logging issus with Djatoka and gsearch
cd $FEDORA_HOME/server/logs
#export PWD=$FEDORA_HOME/server/logs

#Assume we're using the built-in...
if [ -z "$CATALINA_HOME" ]; then
  CATALINA_HOME="$FEDORA_HOME/tomcat"
  echo "Using default CATALINA_HOME: $CATALINA_HOME"
fi

#ping mysql (network incase not on this box) with CORRECT creds... to know if it is running wait 5 try 3 fail
#might be albe to minimize security isses by using a dedicated 'ping account'
# try:
# /etc/init.d/mysqld status
# or
# service mysqld status
# tested on oracle linux

#****** CHECK FOR ROOT STATUS AND BLOCK IT ******#
if [ -z "$FEDORA_USER" ]; then
  ASROOT=0 # a flag to force "run as root"
  for var in "$@"; do
    case $var in
      "-r")
        ASROOT=1
        ;;
    esac
  done

  # check for root status
  if [[ $EUID -eq 0 && $ASROOT -eq 0 ]]; then
    echo "It looks like you're trying to run this script as root"
    echo "This is not normally allowed, to force it use $0 -r"
    exit 1
  fi
fi


PID_SEARCH="pgrep -nf $FEDORA_HOME.*fedora"

run_this_one() {
  if [ -n "$FEDORA_USER" ]; then
    #FIXME: Needs some way to export the necessary variables...
    #Specify a shell, because the fedora user should not have one in passwd (so as to not let people login as fedora)
    /bin/su --shell=/bin/bash --command="$1" $FEDORA_USER
  else
    $1
  fi
}


start() {
  if [ `$PID_SEARCH` ]; then
    echo "Fedora already running! Try running with \"force-start\" if you know for certain it is not running."
  else
    force_start
  fi
}

force_start() {
  echo "> Starting..."
  run_this_one $CATALINA_HOME/bin/startup.sh
  #Kinda weak, but should work well enough...
  echo "Waiting for server startup to complete"
  sleep 2
  while [ ! `$PID_SEARCH` ]; do
    #we could tail catalina.out and prevent passing control until init was complete
    sleep 0.5
  done
}

stop()
{
  PID=`$PID_SEARCH`
  if [ $PID ]; then
    echo "> Stopping..."
    run_this_one $CATALINA_HOME/bin/shutdown.sh
    echo "Waiting for server shutdown to complete"
    sleep 2
    while ps -p $PID > /dev/null; do
      sleep 0.5
    done
  else
    echo "Fedora is not currently running, you can start it with $0 start"
  fi
}

status()
{
  PID=`$PID_SEARCH`

  # more expansive check for status
  if [ $PID ]; then
    # running
    echo "Fedora is up and running with PID="$PID
  else
    # not running
    echo "Fedora is not currently running, you can start it with $0 start"
  fi

}

case "$1" in
  start) start ;;
  force-start) force_start ;;
  stop) stop ;;
  restart) stop ; start ;;
  status) status ;;
  *)
    echo "Usage: `basename $0` {start|stop|status|restart|force-start}"
    exit 2
  ;;
esac

exit $?
